src/components/WhyUs.tsx
import { Check } from "lucide-react";
export const WhyUs = () => {
  const benefits = [
    "Интуитивно понятный интерфейс для управления чатами",
    "Мгновенная модерация контента",
    "Автоматические ответы на часто задаваемые вопросы",
    "Интеграция с популярными сервисами",
    "Регулярные обновления и новые функции",
    "Круглосуточная техническая поддержка"
  ];
  return (
    <section id="why-us" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
          Почему выбирают нас?
        </h2>
        <ul className="space-y-4 max-w-2xl mx-auto">
          {benefits.map((benefit, index) => (
            <li
              key={index}
              className="flex items-center space-x-3 animate-fade-up"
              style={{ animationDelay: `${index * 100}ms` }}
            >
              <div className="w-6 h-6 rounded-full bg-gradient-to-r from-custom-primary to-custom-secondary flex items-center justify-center">
                <Check className="w-4 h-4 text-white" />
              </div>
              <span>{benefit}</span>
            </li>
          ))}
        </ul>
      </div>
    </section>
  );
};
src/components/Testimonials.tsx
import { Star } from "lucide-react";
const testimonials = [
  {
    text: "MyMindBot полностью изменил способ управления нашим сообществом. Автоматизация модерации просто потрясающая!",
    author: "Александр К.",
    role: "Администратор чата",
    rating: 5
  },
  {
    text: "Лучший бот для Telegram, который я когда-либо использовал. Функционал превзошел все ожидания.",
    author: "Мария С.",
    role: "Владелец канала",
    rating: 5
  },
  {
    text: "Отличная поддержка и постоянные обновления. Видно, что команда действительно заботится о продукте.",
    author: "Дмитрий В.",
    role: "Модератор",
    rating: 5
  }
];
export const Testimonials = () => {
  return (
    <section id="testimonials" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
          Отзывы пользователей
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {testimonials.map((testimonial, index) => (
            <div
              key={index}
              className="p-6 bg-card rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 animate-fade-up glass-effect"
              style={{ animationDelay: `${index * 100}ms` }}
            >
              <div className="flex mb-4">
                {[...Array(testimonial.rating)].map((_, i) => (
                  <Star key={i} className="w-5 h-5 text-yellow-400 fill-current" />
                ))}
              </div>
              <p className="text-lg mb-4">{testimonial.text}</p>
              <div className="mt-4">
                <p className="font-semibold">{testimonial.author}</p>
                <p className="text-sm text-muted-foreground">{testimonial.role}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};
src/components/HowItWorks.tsx
export const HowItWorks = () => {
  const steps = [
    "Найдите бота в Telegram и добавьте его в свой чат",
    "Настройте необходимые параметры модерации",
    "Активируйте нужные функции и автоматизации",
    "Наслаждайтесь автоматическим управлением чатом"
  ];
  return (
    <section id="how-it-works" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
          Как это работает?
        </h2>
        <ol className="space-y-6 max-w-2xl mx-auto">
          {steps.map((step, index) => (
            <li
              key={index}
              className="flex items-center space-x-4 animate-fade-up"
              style={{ animationDelay: `${index * 100}ms` }}
            >
              <div className="w-8 h-8 rounded-full bg-gradient-to-r from-custom-primary to-custom-secondary flex items-center justify-center text-white font-bold">
                {index + 1}
              </div>
              <span className="flex-1">{step}</span>
            </li>
          ))}
        </ol>
      </div>
    </section>
  );
};
src/components/Subscriptions.tsx
import { Check } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/components/ui/use-toast";
const plans = [
  {
    name: "Базовый",
    price: "Бесплатно",
    features: [
      "Базовая модерация",
      "До 100 сообщений в день",
      "Основные команды",
      "Базовая аналитика"
    ]
  },
  {
    name: "Продвинутый",
    price: "499₽/мес",
    features: [
      "Все функции базового плана",
      "Неограниченные сообщения",
      "Расширенная модерация",
      "Детальная аналитика",
      "Приоритетная поддержка"
    ]
  },
  {
    name: "Премиум",
    price: "999₽/мес",
    features: [
      "Все функции продвинутого плана",
      "API доступ",
      "Индивидуальные настройки",
      "24/7 премиум поддержка",
      "Белый лейбл"
    ]
  }
];
export const Subscriptions = () => {
  const { toast } = useToast();
  const handleSubscribe = (plan: string) => {
    toast({
      title: "Подписка",
      description: `Вы выбрали план "${plan}". Функция находится в разработке.`,
    });
  };
  return (
    <section id="subscriptions" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
          Тарифные планы
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {plans.map((plan, index) => (
            <div
              key={index}
              className="p-6 bg-card rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 animate-fade-up glass-effect"
              style={{ animationDelay: `${index * 100}ms` }}
            >
              <h3 className="text-2xl font-bold mb-4">{plan.name}</h3>
              <p className="text-3xl font-bold mb-6 gradient-text">{plan.price}</p>
              <ul className="space-y-3 mb-6">
                {plan.features.map((feature, i) => (
                  <li key={i} className="flex items-center space-x-2">
                    <Check className="w-5 h-5 text-custom-primary" />
                    <span>{feature}</span>
                  </li>
                ))}
              </ul>
              <Button
                className="w-full"
                onClick={() => handleSubscribe(plan.name)}
              >
                Выбрать план
              </Button>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};
src/components/Support.tsx
import { MessageSquare } from "lucide-react";
import { Button } from "@/components/ui/button";
export const Support = () => {
  return (
    <section id="support" className="py-20 bg-background">
      <div className="container mx-auto px-4 text-center">
        <h2 className="text-3xl md:text-4xl font-bold mb-6">
          Нужна помощь?
        </h2>
        <p className="text-xl mb-8 max-w-2xl mx-auto">
          Наша команда поддержки готова помочь вам с любыми вопросами 24/7
        </p>
        <Button
          size="lg"
          className="bg-gradient-to-r from-custom-primary to-custom-secondary hover:opacity-90"
          onClick={() => window.open("https://t.me/MyMindBotSupport", "_blank")}
        >
          <MessageSquare className="mr-2" />
          Написать в поддержку
        </Button>
      </div>
    </section>
  );
};
src/components/FAQ.tsx
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
const faqItems = [
  {
    question: "Как добавить бота в чат?",
    answer: "Просто перейдите по ссылке бота и нажмите кнопку 'Добавить в чат'. Выберите нужный чат и предоставьте необходимые разрешения."
  },
  {
    question: "Какие команды поддерживает бот?",
    answer: "Бот поддерживает множество команд для модерации, управления контентом и аналитики. Полный список доступен по команде /help."
  },
  {
    question: "Как настроить автомодерацию?",
    answer: "В настройках бота перейдите в раздел 'Модерация' и выберите нужные параметры фильтрации контента и действий с нарушителями."
  },
  {
    question: "Можно ли использовать бота бесплатно?",
    answer: "Да, базовый функционал бота доступен бесплатно. Для расширенных возможностей предусмотрены платные тарифы."
  }
];
export const FAQ = () => {
  return (
    <section id="faq" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
          Часто задаваемые вопросы
        </h2>
        <div className="max-w-3xl mx-auto">
          <Accordion type="single" collapsible>
            {faqItems.map((item, index) => (
              <AccordionItem key={index} value={`item-${index}`}>
                <AccordionTrigger>{item.question}</AccordionTrigger>
                <AccordionContent>{item.answer}</AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </div>
      </div>
    </section>
  );
};
src/components/Partners.tsx
import { Users } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/components/ui/use-toast";
export const Partners = () => {
  const { toast } = useToast();
  const handlePartnerClick = () => {
    const referralLink = 'https://t.me/MyMindBot?start=referral123';
    navigator.clipboard.writeText(referralLink).then(() => {
      toast({
        title: "Успешно!",
        description: "Реферальная ссылка скопирована в буфер обмена",
      });
    }).catch(() => {
      toast({
        title: "Ваша реферальная ссылка",
        description: referralLink,
      });
    });
  };
  return (
    <section id="partners" className="py-20 bg-background">
      <div className="container mx-auto px-4 text-center">
        <h2 className="text-3xl md:text-4xl font-bold mb-6">
          Партнёрская программа
        </h2>
        <p className="text-xl mb-8 max-w-2xl mx-auto">
          Зарабатывайте 30% с каждой оплаты приглашенного вами пользователя
        </p>
        <Button
          size="lg"
          className="bg-gradient-to-r from-custom-primary to-custom-secondary hover:opacity-90"
          onClick={handlePartnerClick}
        >
          <Users className="mr-2" />
          Получить реферальную ссылку
        </Button>
      </div>
    </section>
  );
};
src/components/InDevelopment.tsx
import { useState } from "react";
import { ThumbsUp, ThumbsDown } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useToast } from "@/components/ui/use-toast";
const futureFeatures = [
  {
    title: "Голосовые команды",
    description: "Управление ботом с помощью голосовых сообщений",
    votes: { likes: 150, dislikes: 10 }
  },
  {
    title: "Интеграция с AI",
    description: "Умные ответы на основе искусственного интеллекта",
    votes: { likes: 280, dislikes: 15 }
  },
  {
    title: "Расширенная аналитика",
    description: "Детальные отчеты и графики активности",
    votes: { likes: 200, dislikes: 5 }
  }
];
export const InDevelopment = () => {
  const { toast } = useToast();
  const [email, setEmail] = useState("");
  const handleVote = (feature: string, type: 'like' | 'dislike') => {
    toast({
      title: "Голос учтен",
      description: `Вы проголосовали ${type === 'like' ? 'за' : 'против'} функции "${feature}"`,
    });
  };
  const handleSubscribe = (e: React.FormEvent) => {
    e.preventDefault();
    if (email) {
      toast({
        title: "Успешно!",
        description: "Вы подписались на обновления",
      });
      setEmail("");
    }
  };
  return (
    <section id="in-development" className="py-20 bg-background">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
          В разработке
        </h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
          {futureFeatures.map((feature, index) => (
            <div
              key={index}
              className="p-6 bg-card rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 animate-fade-up glass-effect"
              style={{ animationDelay: `${index * 100}ms` }}
            >
              <h3 className="text-xl font-bold mb-3">{feature.title}</h3>
              <p className="mb-4">{feature.description}</p>
              <div className="flex items-center justify-between">
                <span className="text-sm">
                  👍 {feature.votes.likes} | 👎 {feature.votes.dislikes}
                </span>
                <div className="space-x-2">
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => handleVote(feature.title, 'like')}
                  >
                    <ThumbsUp className="w-4 h-4" />
                  </Button>
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => handleVote(feature.title, 'dislike')}
                  >
                    <ThumbsDown className="w-4 h-4" />
                  </Button>
                </div>
              </div>
            </div>
          ))}
        </div>
        <div className="max-w-md mx-auto">
          <h3 className="text-2xl font-bold text-center mb-6">
            Подпишитесь на обновления
          </h3>
          <form onSubmit={handleSubscribe} className="flex gap-4">
            <Input
              type="email"
              placeholder="Ваш email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />
            <Button type="submit">Подписаться</Button>
          </form>
        </div>
      </div>
    </section>
  );
};
src/pages/Index.tsx
import { Header } from "@/components/Header";
import { Header } from "@/components/Header";
import { Hero } from "@/components/Hero";
import { Hero } from "@/components/Hero";
import { Features } from "@/components/Features";
import { Features } from "@/components/Features";
import { WhyUs } from "@/components/WhyUs";
import { Testimonials } from "@/components/Testimonials";
import { HowItWorks } from "@/components/HowItWorks";
import { Subscriptions } from "@/components/Subscriptions";
import { Partners } from "@/components/Partners";
import { InDevelopment } from "@/components/InDevelopment";
import { Support } from "@/components/Support";
import { FAQ } from "@/components/FAQ";
const Index = () => {
const Index = () => {
  return (
  return (
Expand 1 lines ...			
      <Header />
      <Header />
      <Hero />
      <Hero />
      <Features />
      <Features />
      <WhyUs />
      <Testimonials />
      <HowItWorks />
      <Subscriptions />
      <Partners />
      <InDevelopment />
      <Support />
      <FAQ />
    </div>
    </div>
  );
  );
};
};
Expand 2 lines ...			
